CREATE VERTEX Party (PRIMARY_ID party_id UINT, name STRING, party_type STRING, created_at DATETIME, updated_at DATETIME)
CREATE VERTEX Resource (PRIMARY_ID resource_id UINT, name STRING, resource_type STRING, created_at DATETIME, updated_at DATETIME)
CREATE VERTEX Profile (PRIMARY_ID profile_id UINT, name STRING, created_at DATETIME, updated_at DATETIME)
CREATE VERTEX Person (PRIMARY_ID person_id UINT, name STRING, is_active BOOL, created_at DATETIME, updated_at DATETIME)

CREATE DIRECTED EDGE ACCESSED (FROM Person, TO Resource, successful BOOL, created_at DATETIME)
CREATE DIRECTED EDGE ACCESS_TO (FROM Profile, TO Resource)
CREATE DIRECTED EDGE ASSIGNED_TO (FROM Profile, TO Person)
CREATE DIRECTED EDGE CHILD_OF (FROM Party, TO Party)
CREATE DIRECTED EDGE IDENTIFIED_BY (FROM Party, TO Person)
CREATE DIRECTED EDGE MANAGED_BY (FROM Party, TO Party)
CREATE DIRECTED EDGE MANAGES_PERSON (FROM Party, TO Person)
CREATE DIRECTED EDGE MANAGES_PROFILE (FROM Party, TO Profile)
CREATE DIRECTED EDGE SUBRESOURCE_OF (FROM Resource, TO Resource)

CREATE GRAPH Entitlements (*)

USE GRAPH Entitlements

CREATE DATA_SOURCE KAFKA kafka_loader = "/home/tigergraph/graph-data/kafka.config" FOR GRAPH Entitlements

CREATE LOADING JOB real_time_loader FOR GRAPH Entitlements {
	DEFINE FILENAME parties = "$kafka_loader:/home/tigergraph/graph-data/parties.config";
	DEFINE FILENAME resources = "$kafka_loader:/home/tigergraph/graph-data/resources.config";
	DEFINE FILENAME profiles = "$kafka_loader:/home/tigergraph/graph-data/profiles.config";
	DEFINE FILENAME people = "$kafka_loader:/home/tigergraph/graph-data/people.config";
	DEFINE FILENAME accesses = "$kafka_loader:/home/tigergraph/graph-data/accesses.config";
	DEFINE FILENAME access_to = "$kafka_loader:/home/tigergraph/graph-data/access_to.config";
	DEFINE FILENAME assigned_to = "$kafka_loader:/home/tigergraph/graph-data/assigned_to.config";
	DEFINE FILENAME child_of = "$kafka_loader:/home/tigergraph/graph-data/child_of.config";
	DEFINE FILENAME identified_by = "$kafka_loader:/home/tigergraph/graph-data/identified_by.config";
	DEFINE FILENAME managed_by = "$kafka_loader:/home/tigergraph/graph-data/managed_by.config";
	DEFINE FILENAME manages_people = "$kafka_loader:/home/tigergraph/graph-data/manages_people.config";
	DEFINE FILENAME manages_profiles = "$kafka_loader:/home/tigergraph/graph-data/manages_profiles.config";
	DEFINE FILENAME subresource_of = "$kafka_loader:/home/tigergraph/graph-data/subresource_of.config";

	LOAD parties TO VERTEX Party VALUES ($"payload":"id", $"payload":"name", $"payload":"party_type", $"payload":"created_at", $"payload":"updated_at") USING JSON_FILE="true";
	LOAD resources TO VERTEX Resource VALUES ($"payload":"id", $"payload":"name", $"payload":"type", $"payload":"created_at", $"payload":"updated_at") USING JSON_FILE="true";
	LOAD profiles TO VERTEX Profile VALUES ($"payload":"id", $"payload":"name", $"payload":"created_at", $"payload":"updated_at") USING JSON_FILE="true";
	LOAD people TO VERTEX Person VALUES ($"payload":"id", $"payload":"name", $"payload":"is_active", $"payload":"created_at", $"payload":"updated_at") USING JSON_FILE="true";

	LOAD accesses to EDGE ACCESSED VALUES ($"payload":"person_id", $"payload":"resource_id", $"payload":"successful", $"payload":"created_at") USING JSON_FILE="true";
	LOAD access_to TO EDGE ACCESS_TO VALUES ($"payload":"profile_id", $"payload":"resource_id") USING JSON_FILE="true";
	LOAD assigned_to TO EDGE ASSIGNED_TO VALUES ($"payload":"profile_id", $"payload":"person_id") USING JSON_FILE="true";
	LOAD child_of TO EDGE CHILD_OF VALUES ($"payload":"child_id", $"payload":"parent_id") USING JSON_FILE="true";
	LOAD identified_by TO EDGE IDENTIFIED_BY VALUES ($"payload":"party_id", $"payload":"person_id") USING JSON_FILE="true";
	LOAD managed_by TO EDGE MANAGED_BY VALUES ($"payload":"party_id", $"payload":"manager_id") USING JSON_FILE="true";
	LOAD manages_people TO EDGE MANAGES_PERSON VALUES ($"payload":"party_id", $"payload":"person_id") USING JSON_FILE="true";
	LOAD manages_profiles TO EDGE MANAGES_PROFILE VALUES ($"payload":"party_id", $"payload":"profile_id") USING JSON_FILE="true";
	LOAD subresource_of TO EDGE SUBRESOURCE_OF VALUES ($"payload":"subresource_id", $"payload":"resource_id") USING JSON_FILE="true";
}
